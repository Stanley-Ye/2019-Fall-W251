(*) Run Docker interactively for initial setup
docker run -it --name alpine1 alpine sh

(*) Create Docker images
sudo docker build -f Dockerfile.msqtt_broker -t msqtt_broker .
sudo docker build -f Dockerfile.msqtt_forwarder -t msqtt_forwarder .
sudo docker build -f Dockerfile.face_detector -t face_detector .
sudo docker build -f Dockerfile.image_saver -t image_saver .


### Jetson ###
(*) Create network bridge
sudo docker network create --driver bridge hw03

(*) Create container: broker
sudo docker run --name broker --network hw03 -p 1883:1883 msqtt_broker

(*) Create container: forwarder
# Assumes IP of broker is 172.18.0.2
sudo docker run --name forwarder --network hw03 -ti msqtt_forwarder sh
python3 forwarder.py

(*) Create container: detector
# Debug by running (python face_detector.py) in terminal without container.
# Assumes IP of broker is 172.18.0.2 and topic is "image"
#sudo docker run --name detector --network hw03 --device=/dev/video1:/dev/video1 -ti face_detector bash
sudo docker run --name detector2 --network hw03 --device=/dev/video1:/dev/video1 -ti w251/tensorflow:tx2-3.3_b39-py2 bash

python face_detector.py


### VSI ###
(*) Create network bridge
sudo docker network create --driver bridge hw03

(*) Create container: broker
sudo docker run --name broker --network hw03 -p 1883:1883 msqtt_broker

(*) Create container: image_saver
sudo docker run --name image_saver --network hw03 -ti image_saver bash
python3 image_saver.py


---

### DEBUG ###
(*) Error starting userland proxy: listen tcp 0.0.0.0:1883: bind: address already in use.
    netstat -pna | grep 1883
    kill 5542

(*) Show IP for docker container
docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' broker
